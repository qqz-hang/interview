1. JDK和JRE有什么区别？
	JDK：Java Development Kit 的简称，Java 开发工具包，提供了 Java 的开发环境和运行环境。
	JRE：Java Runtime Environment 的简称，Java 运行环境，为 Java 的运行提供了所需环境。
	JDK 其实包含了 JRE，同时还包含了编译 Java 源码的编译器 Javac，还包含了很多 Java 程序调试和分析的工具。
	
2. 开发Java程序的步骤
	编写源程序 ---> 编译源程序 ---> 运行
	
3.1 变量是什么？
	变量，就是可以改变的量
	
3.2 变量的三要素是什么？"
	1.数据类型 ： 决定在内存中分配的空间
	2.变量名 ： 空间别名
	3.值 ：空间中存储的数据
   
4. 变量的命名规范
	1.只能使用：字母、数字、$、下划线_，不能以数字开头
	2.小驼峰命名
	3.不能以关键字保留字命名
	4.命名见名知意
	
5. java 数据类型和默认值
	boolean        false

	char           '/u000'(空字符)

	byte           0

	short          0

	int            0

	long           0L

	float          0.0F

	double         0.0
	
6. 基本数据类型转换的规则
	从低位类型到高位类型自动转换；
	从高位类型到低位类型需要强制类型转换
	
7. ==与.equals()有什么不同
	==比较:		
		基本类型：比较的是值是否相同；
		引用类型：比较的是引用地址是否相同
	equals比较:
		equals 默认情况下是引用比较，只是很多类重写了 equals 方法
		所以一般情况下 equals 比较的是值是否相等
		
8. 单| & 与 双|| && （短路）区别？
	＆＆逻辑与　　｜｜逻辑或　　它们都是逻辑运算符,有短路功能
	＆　按位与　　｜　按位或　　它们既是位运算符也是逻辑运算符,但没有短路功能
	
	＆＆逻辑与　也叫做短路与　因为只要当前项为假，它就不往后判断了，直接认为表达式为假
	｜｜逻辑或　也叫做短路或　因为只要当前项为真，它也不往后判断了，直接认为表达式为真

9. if...else和写两个 if 区别
	两个if为两次选择判断,两条语句,都会执行
	if...else为一次判断,if为选择条件1,else为除去选择条件1之外的其他情况，只会执行其中一条语句
	
10.switch( )接受的数据类型
	JDK1.0-1.4 数据类型接受 byte short int char

	JDK1.5       数据类型接受 byte short int char enum(枚举)

	JDK1.7       数据类型接受 byte short int char enum(枚举)，String 六种类型
	
11.break、continue和return的区别？
	break:		
		直接跳出当前循环或者程序块，执行剩下的代码
	continue:	
		跳过本次循环体中剩余的尚未执行的语句，回到循环条件的起始处，再一次进行循环操作
	return:
		它的功能是结束一个方法,一旦在循环体内执行到一个return语句，return语句将会结束该方法，循环自然也随之结束
		
12.什么是数组，它有什么特征？
	数组的定义：数组是相同类型数据的有序集合
	数组的特征:
		1.其长度是确定的。数组一旦被创建，它的大小就是不可以改变的。 
		2.其元素必须是相同类型,不允许出现混合类型。
		3.数组中的元素可以是任何数据类型 ，包括基本类型和引用类型
		
13.数组的创建与使用方式
	1.动态创建:
		数据类型[]  数组名 = new 数据类型[长度]; 
	2.静态创建:
		数据类型[] 数组名 = {值1,值2, 值3.....值n};
		
	3.1数组赋值:
		数组名[索引] = 值;
	3.2数组取值:
		数组名[索引];
		
14.方法的定义和使用
	定义:可以看成是一个可以完成独立功能的代码块，可以重复使用，每次使用都是独立的！存在于类的结构体
	使用:
		1.方法有static修饰：类名.方法名+参数列表[个数，顺序，类型必须一致]
		2.方法没有static修饰：对象名.方法名+参数列表[个数，顺序，类型必须一致]
		3.方法在同一个类中：
			静态方法调用非静态方法：对象名.方法名+参数列表[个数，顺序，类型必须一致] 
				              其他：方法名+参数列表[个数，顺序，类型必须一致]
		
15.Arrays工具类常用方法？
       排序 : sort()
 
　　查找 : binarySearch()
 
　　比较: equals()  用于比较两个数组元素是否数量相同，并且相同位置的元素是否相同。

　　填充 : fill()
 
　　转列表: asList() 
 
　　转字符串 : toString()
 
　　复制: copyOf()

	
16.什么是面向对象？
	面向对象是一种思想，是基于面向过程而言的，面向对象是将功能等通过对象来实现，
	将功能封装进对象之中，让对象去实现具体的细节
	
17.什么是对象？什么是类？
	对象:
		对象就是一个真实世界中的实体，对象与实体是一一对应关系的，意思就是现实世界的每一个实体都是一个对象。
	类:
		在面向对象的程序设计语言中，类是对一类“事物”的属性与行为的抽象
17.2类与对象的关系？
		类是对象的集合，对象是类的实例，类描述了一组有相同特性和相同行为的对象
18.如何定义一个类
	1.使用class关键字+类名定义类
	2.编写类的属性
	3.编写类的方法
	
19.什么是构造方法
	java中的构造方法是用来初始化一个对象的，并为为实例变量赋予合适的初始值
	
20.什么是封装？
	封装是将类的某些信息隐藏在类的内部，不允许外部程序直接访问，
	而是通过该类提供的方法来实现对隐藏信息的操作和访问
	
21.JAVA中访问修饰符有哪些？
	public  	公共的：在同一个项目中在不同包的不同类中均可访问。
	private 	私有的：只能在定义该变量的类中使用，其他类均不可访问。
	default 	默认的：只能访问本包的类。
	protected   受保护的：只允许被类本身及其子类访问。

22.this、super的用法与区别?
	this.:可以访问本类所有的属性和方法
	this(): 调用本类的构造，只能写在构造方法的第一句
	
	super.: 访问当前对象的父类部分，即只能访问继承而来的父类属性和方法
	super(): 调用父类的其它构造，只能写在构造方法的第一句
	
23.重写与重载的区别
	overload（重载）
		1.参数类型、个数、顺序至少有一个不相同。
		2.不能重载只有返回值不同的方法名。
		3.存在于父类和子类、同类中。
	override（重写）
		1.方法名、参数、返回值相同。
		2.子类方法不能缩小父类方法的访问权限。
		3.子类方法不能抛出比父类方法更多的异常(但子类方法可以不抛出异常)。
		4.存在于父类和子类之间。
		5.方法被定义为final不能被重写。	
24.抽象类必须要有抽象方法吗?
		不需要，抽象类不一定非要有抽象方法。
		
   24.抽象类和普通类有哪些区别？
		1.普通类不能包含抽象方法，抽象类可以包含抽象方法。
		2.抽象类不能直接实例化，普通类可以直接实例化。
		
25.抽象类能使用 final 修饰吗？
	不能，定义抽象类就是让其他类继承的，
	如果定义为 final 该类就不能被继承，这样彼此就会产生矛盾
	
26.接口和抽象类有什么区别？
	1.实现：抽象类的子类使用 extends 来继承；接口必须使用 implements 来实现接口。
	2.构造函数：抽象类可以有构造函数,接口不能有。
	3.实现数量：类可以实现很多个接口,但是只能继承一个抽象类。
	4.访问修饰符：接口中的方法默认使用 public 修饰,抽象类中的方法可以是任意访问修饰符。
	
27.Java 容器都有哪些？
	Java 容器分为 Collection 和 Map 两大类:
	1.Collection:
		List
			ArrayList
			LinkedList
			Vector
			Stack
		Set
			HashSet
			LinkedHashSet
			TreeSet
	2.Map:
		HashMap
			LinkedHashMap
		TreeMap
		ConcurrentHashMap
		Hashtable
		
28.List、Set、Map 之间的区别
	List:
		1.可以允许重复的对象   
		
       		 2.可以插入多个null元素
		
       		 3.是一个有序的容器，保持了每个元素的插入顺序，输出的顺序就是插入的顺序
	Set:
		1.不允许重复对象
       		 2.是一个无序容器，TreeSet通过Comparator 或者 Comparable 维护了一个排序顺序。
       		 3.只允许插入一个null元素
	Map:
		1.Map不是collection的子接口或者实现类。Map是一个接口
      		 2.Map的每个Entry都持有两个对象，也就是一个键一个值，Map可能会持有相同的值对象但键对象必须是唯一的。
        		3.TreeMap 也通过 Comparator 或者Comparable 维护了一个排序顺序。
       		 4.Map 里你可以拥有随意的NULL值但最多只能有一个NULL键
		
29.说一下 HashMap 的实现原理？
	HashMap 基于 Hash 算法实现的，我们通过 put(key,value)存储，get(key)来获取。
	当传入 key 时，HashMap 会根据 key. hashCode() 计算出 hash 值，根据 hash 值将 value 保存在 bucket 里。
	当计算出的 hash 值相同时，我们称之为 hash 冲突，
	HashMap 的做法是用链表和红黑树存储相同 hash 值的 value。
	当 hash 冲突的个数比较少时，使用链表否则使用红黑树。
30.ArrayList 和 LinkedList 的区别
	1.数据结构实现：
		ArrayList 是动态数组的数据结构实现，而 LinkedList 是双向链表的数据结构实现。
	2.随机访问效率：
		ArrayList 比 LinkedList 在随机访问的时候效率要高，因为 LinkedList 是线性的数据存储方式，所以需要移动指针从前往后依次查找。
	3.增加和删除效率：
		在非首尾的增加和删除操作，LinkedList 要比 ArrayList 效率要高，因为 ArrayList 增删操作要影响数组内的其他数据的下标。
	4.初始容量:
		arraylist的初始化时默认10容量，而linkedlist默认初始化为空
	综合来说:
		在需要频繁读取集合中的元素时，更推荐使用 ArrayList，而在插入和删除操作较多时，更推荐使用 LinkedList。
